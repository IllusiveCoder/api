openapi: 3.0.3
info:
  title: Webtableau API
  description:
    An API that allows various operations related to receiving and sending data of recipe instructions.
  version: 0.1-TEST
servers:
  - url: http://localhost:8080
tags:
  - name: getrecipedata
    description: Operations related to receive recipe data.
  - name: postrecipedata
    description: Operations related to post recipe data.
  - name: putrecipedata
    description: Operations related to update recipe data.
  - name: getuserdata
    description: Operations related to receive user data.
  - name: postuserdata
    description: Operations related to posting user data.
paths:
  /recipe:
    get:
      summary: Get a recipe.
      tags:
        - getrecipedata
      operationId: getrecipe
      parameters:
        - in: query
          name: id
          description: Loading recipe.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Search for specific recipe.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Recipe'
    post:
      summary: Add a recipe to the database.
      tags:
        - postrecipedata
      operationId: postrecipe
      requestBody:
        description: Add a new recipe.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          description: Added recipe to the database.
        '400':
          description: Something went wrong.
    put:
      summary: Update a recipe.
      tags:
        - putrecipedata
      operationId: putrecipe
      parameters:
        - in: query
          name: id
          description: Loading recipe.
          required: true
          schema:
            type: integer
      requestBody:
        description: Add a new recipe.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
          '201':
            description: Added recipe to the database.
          '400':
            description: Something went wrong.


  /recipe/page:
    get:
      summary: Get a list of all recipes.
      tags:
        - getrecipedata
      operationId: getrecipepage
      x-spring-paginated: true
      parameters:
        - in: query
          name: page
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
        - in: query
          name: size
          description: The number of items per page.
          required: false
          schema:
            type: integer
            default: 10
        - in: query
          name: title
          description: A title or text someone is looking for.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of all available recipes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRecipes'

components:
  schemas:
    Recipe:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        createdby:
          type: string
        shortsummary:
          type: string
        preparation:
          type: string
        ingredients:
          type: string
        picture:
          type: string
    RecipeShort:
        type: object
        properties:
          title:
            type: string
          shortsummary:
            type: string
          pictures:
            type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        username:
          type: string
        profilepicture:
          type: string
        favourites:
          type: string
    PaginatedRecipes:
      type: object
      properties:
        totalItems:
          type: integer
        totalPages:
          type: integer
        currentPage:
          type: integer
        recipes:
          type: array
          items:
            $ref: '#/components/schemas/RecipeShort'




