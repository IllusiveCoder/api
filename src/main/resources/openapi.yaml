openapi: 3.0.3
info:
  title: Webtableau API
  description: |-
    An API that allows various operations related to receiving and sending data of recipe instructions.
  version: 0.1-TEST
servers:
  - url: http://localhost:8080
tags:
  - name: getrecipedata
    description: Operations related to receive recipe data.
  - name: postrecipedata
    description: Operations related to post recipe data.
  - name: getuserdata
    description: Operations related to receive user data.
  - name: postuserdata
    description: Operations related to posting user data.
paths:
  /recipe:
    get:
      summary: Get a recipe.
      tags:
        - getrecipedata
      operationId: getrecipe
      responses:
        '200':
          description: List of all available recipes.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Recipe'
    post:
      summary: Add a recipe to the database.
      tags:
        - postrecipedata
      operationId: postrecipe
      requestBody:
        description: Add a new recipe.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          description: Added recipe to the database.
        '400':
          description: Something went wrong.

  /user:
    get:
      summary: Get a list of searched users.
      tags:
        - getuserdata
      operationId: getusers
      responses:
        '200':
          description: List of all searched users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Add a new user to the database.
      tags:
        - postuserdata
      operationId: postuser
      requestBody:
        description: Add a new user.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Add a new user to the database.
        '400':
          description: Something went wrong.

  /recipes:
    get:
      summary: Get a list of all recipes.
      tags:
        - getrecipedata
      operationId: getrecipes
      x-spring-paginated: true
      parameters:
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of all available recipes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRecipes'
    post:
      summary: Add recipes to the database.
      tags:
        - postrecipedata
      operationId: postrecipes
      requestBody:
        description: Add new recipes.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          description: Added recipes to the database.
        '400':
          description: Something went wrong.

components:
  schemas:
    Recipe:
      type: object
      properties:
        title:
          type: string
        createdby:
          type: string
        shortsummary:
          type: string
        preparation:
          type: string
        ingredients:
          type: string
        picture:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        username:
          type: string
        profilepicture:
          type: string
        favourites:
          type: string
    PaginatedRecipes:
      type: object
      properties:
        totalItems:
          type: integer
        totalPages:
          type: integer
        currentPage:
          type: integer
        recipes:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'




